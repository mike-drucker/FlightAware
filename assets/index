<html>
<head>
    <title>HUD</title>
    <style type="text/css">
        .canvas { position:fixed;top:60px;left:10px;}
    </style>
    <script type="text/javascript" src="/jquery" ></script>
 <script type="text/javascript">
        window.onerror = function (msg, url, linenumber) {
            alert('Error message: ' + msg + '\nURL: ' + url + '\nLine Number: ' + linenumber);
            $(".jsError").html('Error message: ' + msg + '\nURL: ' + url + '\nLine Number: ' + linenumber);
            return true;
        }
        function worker() {
            $.ajax({
                url: '/data',
                success: function (data) {
                    $('.result').html(data);
                    $('.errorData').html('');
                    $('.errorStatus').html('');
                    $('.errorMessage').html('');
                    $(".jsError").html('');
                    drawHud(JSON.parse(data)); 
                },
                error: function (data, status, error) {
                    $('.errorData').html(data);
                    $('.errorStatus').html(status);
                    $('.errorMessage').html(error);
                },
                complete: function () {
                    // Schedule the next request when the current one's complete
                    setTimeout(worker, 100);
                }
            });
        };
        $(document).ready(function () {
            setTimeout(worker, 10);
            //drawHud(null);
        });
        var canvasFlip = false;
        function drawHud(data) {
            try {
            var oldCanvas = $(".canvas")[canvasFlip ? 1 : 0];
            var canvas = $(".canvas")[canvasFlip ? 0 : 1];
            var context = canvas.getContext('2d');
            context.moveTo(10, canvas.height / 2);
            context.lineTo(canvas.width - 10, canvas.height / 2);
            context.beginPath();
            context.arc(canvas.width / 2, canvas.height / 2 + (data.pch * 2), 10, 0, 2 * Math.PI);
            context.stroke();
            context.moveTo(canvas.width / 2, canvas.height / 2);
            context.lineTo(canvas.width / 2 + 100 * Math.cos(data.rol*(Math.PI/180)),
                           canvas.height / 2 + 100 * Math.sin(data.rol*(Math.PI/180)));
            context.lineTo(canvas.width / 2 - 100 * Math.cos(data.rol*(Math.PI/180)),
                           canvas.height / 2 - 100 * Math.sin(data.rol*(Math.PI/180)));
            context.stroke();
            if(data.gpsErr !== null) {
            	context.font = "15px Arial";
            	context.fillText(data.dir + " "+ data.azi+"\xB0", canvas.width / 2 - 40, 15);
            	context.font = "10px Arial";
            	context.fillText(data.alt+" m", 10, canvas.height / 2 + 30);
            	context.fillText(data.spd + " m/s", 10, canvas.height / 2 + 40);
            }
            $(canvas).css("visibility","visible");
            $(oldCanvas).css("visibility","hidden");
            context = oldCanvas.getContext('2d');
            context.clearRect(0, 0, oldCanvas.width, oldCanvas.height);
            canvasFlip = (!canvasFlip);
            }
            catch(err){
            	alert(err);
            }
        }
    </script>
</head>
<body>
	<span class="debug"></span>
    <div class="errorData"></div><div class="errorStatus"></div><div class="errorMessage"></div><div class="jsError"></div>
    <div class="result"></div>
    <canvas class="canvas" width="600" height="400" style="border:1px solid #d3d3d3;" id="c1"></canvas>
    <canvas class="canvas" width="600" height="400" style="border:1px solid #d3d3d3;visibility:hidden;" id="c2"></canvas>
</body>
</body>
</html>
